# Generated by Django 5.1.7 on 2025-06-04 21:13

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('terapia', '0004_alter_intervalodisponibilidade_data_hora_fim_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PleaseFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora_inicio', models.DateTimeField(help_text='A data deste campo é apenas utilizada para obter o dia da semana do intervalo, o que significa que a data em si não importa desde que o dia da semana esteja correto. Por conveniência, usa-se a semana de 01/01/0007 até 08/01/0007, isto é, datetime(7, 1, 1) até datetime(7, 1, 8). A razão para isso é que nessa semana, o número do dia do mês é o mesmo do dia da semana no formato ISO, ou seja: 01/01/0007 é segunda (1), 02/01/0007 é terça (2) ... 07/01/0007 é domingo (7), e 08/01/0007 é segunda (1) novamente.', validators=[django.core.validators.MinValueValidator(datetime.datetime(7, 1, 1, 3, 6, 28, tzinfo=datetime.timezone.utc), message='A data deve estar entre 01/01/0007 e 08/01/0007.'), django.core.validators.MaxValueValidator(datetime.datetime(8, 1, 7, 3, 6, 28, tzinfo=datetime.timezone.utc), message='A data deve estar entre 01/01/0007 e 08/01/0007.')], verbose_name='Dia da semana e hora do início do intervalo')),
                ('data_hora_fim', models.DateTimeField(help_text='A data deste campo é apenas utilizada para obter o dia da semana do intervalo, o que significa que a data em si não importa desde que o dia da semana esteja correto. Por conveniência, usa-se a semana de 01/01/0007 até 08/01/0007, isto é, datetime(7, 1, 1) até datetime(7, 1, 8). A razão para isso é que nessa semana, o número do dia do mês é o mesmo do dia da semana no formato ISO, ou seja: 01/01/0007 é segunda (1), 02/01/0007 é terça (2) ... 07/01/0007 é domingo (7), e 08/01/0007 é segunda (1) novamente.', validators=[django.core.validators.MinValueValidator(datetime.datetime(7, 1, 1, 3, 6, 28, tzinfo=datetime.timezone.utc), message='A data deve estar entre 01/01/0007 e 08/01/0007.'), django.core.validators.MaxValueValidator(datetime.datetime(8, 1, 7, 3, 6, 28, tzinfo=datetime.timezone.utc), message='A data deve estar entre 01/01/0007 e 08/01/0007.')], verbose_name='Dia da semana e hora do fim do intervalo')),
            ],
        ),
    ]
